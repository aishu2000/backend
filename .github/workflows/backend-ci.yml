# Workflow name
name: Backend Continuous Integration

# Triggers for the workflow
on:
  # Manual trigger using the workflow_dispatch event
  workflow_dispatch:

  # Automatic trigger on pull request events targeting the main branch
  pull_request:
    branches:
      - main

# Jobs defined in the workflow
jobs:
  lint:
    # The operating system for the runner
    runs-on: ubuntu-latest

    # Steps in the job
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Python
        uses: actions/setup-python@v3
        with:
          pyt-version: latest
          cache: "pip"

      - name: Install pipenv
        run: |
          pip install pipenv

      - name: Run lint
        run: pipenv run lint

      - name: Print a message
        run: echo "Lint job completed"

  test:
    # The operating system for the runner
    runs-on: ubuntu-latest

    # Steps in the job
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Use Python
        uses: actions/setup-python@v3
        with:
          pyt-version: latest
          cache: "pip"

      - name: Install pipenv
        run: pip install pipenv

      - name: Run tests
        run: pipenv run test

      - name: Print a message
        run: echo "Test job completed"

  build:
    needs: [lint, test]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: backend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
